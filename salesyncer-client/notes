install angular CLI 
npm install -g @angular/cli
============================================================================
my-angular-app/
├── src/
|   ├── app/
|   |   ├── core/
|   |   |   ├── guards/               // Route guards
|   |   |   ├── interceptors/         // HTTP interceptors
|   |   |   ├── services/             // App-wide services
|   |   |   ├── models/               // Shared data models/interfaces
|   |   |
|   |   ├── shared/
|   |   |   ├── components/           // Reusable components
|   |   |   ├── directives/            // Reusable directives
|   |   |   ├── pipes/                 // Reusable pipes
|   |   |
|   |   ├── user/                     // User module
|   |   |   ├── components/           // User-specific components
|   |   |   ├── services/             // User-specific services
|   |   |   ├── store/                // User-specific NgRx store
|   |   |
|   |   ├── admin/                    // Admin module
|   |   |   ├── components/           // Admin-specific components
|   |   |   ├── services/             // Admin-specific services
|   |   |   ├── store/                // Admin-specific NgRx store
|   |   |
|   |   ├── app-routing.module.ts     // App-level routing
|   |   ├── app.component.html
|   |   ├── app.component.scss
|   |   ├── app.component.ts
|   |
|   ├── assets/                       // Static assets (images, fonts, etc.)
|
===============================================================================

Add theme in css
@import '~@angular/material/prebuilt-themes/indigo-pink.css';
import common css
@import "/src/styles.scss";


===============================================================================

Swal alert after response

  if (response.status == 'OK') {

          Swal.fire({
            position: 'center',
            icon: 'success',
            title: 'User updated successfully',
            showConfirmButton: false,
            timer: 1500,
          });
          this.router.navigate(['profile'])
        } else {
          Swal.fire(response.status, response.message, 'error');
        }

===============================================================================

Refresh current route

const currentUrl = this.router.url;
            this.router
              .navigateByUrl('admin', { skipLocationChange: true })
              .then(() => {
                this.router.navigateByUrl(currentUrl);
              });

===============================================================================
Spinner

showSpinner: boolean = false;
this.showSpinner = true;
this.showSpinner = false;

<div class="spinner-container" *ngIf="showSpinner">
    <img src="assets/images/loading1.gif" alt="">
    <!-- <mat-spinner class="spinner"></mat-spinner> -->
  </div>

===============================================================================

conditional route

 const currentroute= this.router.url;
    if(currentroute.toString().includes('admin'))
    {
     this.router.navigate(['admin/contacts']);
    }
    else{
      this.router.navigate(['contacts']);
    }

===============================================================================
confirm message

 Swal.fire({
      title: 'Confirmation',
      text: `Are you sure to ${toDo} the request?`,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33  ',
      confirmButtonText: 'Yes',
    }).then((result) => {
      if (result.isConfirmed) {

        this.showSpinner = true;

        this.adminApi.leaveAction({ _id, toDo }).subscribe((response) => {
          console.log(response);
          if (response.status == 'OK') {
            this.showSpinner = false;
            Swal.fire({
              position: 'center',
              icon: 'success',
              title: response.message,
              showConfirmButton: false,
              timer: 1500,
            });

            const currentUrl = this.router.url;
            this.router
              .navigateByUrl('admin', { skipLocationChange: true })
              .then(() => {
                this.router.navigateByUrl(currentUrl);
              });
          } else {
            this.showSpinner = false;
            Swal.fire(response.status, response.message, 'error');
          }
        });
      }
    })

======================================================================

Pagination

this.dataSource.paginator=this.paginator;
      this.dataSource.sort = this.sort;


======================================================================
Change values of select according to another form selecct


    const categoryControl: FormControl = this.leadsGroup.get('productCategory') as FormControl;
    categoryControl.valueChanges.subscribe((selectedCategory) => {
      if (selectedCategory) {
        this.onCategoryChange(selectedCategory);
      }
    });


  onCategoryChange(selectedCategory: string){
    this.filteredProducts= this.productsData.filter((product:any)=>product.category== selectedCategory)

  }



======================================================================

