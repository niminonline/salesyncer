npm init
npx tsc --init
npm install express cors mongodb mongoose cookie-parser jsonwebtoken multer moment
npm install --save-dev @types/express @types/mongodb @types/mongoose @types/node nodemon ts-node typescript


Update node and npm

npm install -g npm@latest
npm install -g node@latest

npm init
npx tsc --init
npm install express cors mongodb mongoose moment dotenv winston
npm install --save-dev @types/express @types/mongodb @types/mongoose @types/node nodemon ts-node typescript



Ports
API INetgration 3000
Athentication - 3001
Office-3002,
Business-3003
Account-3004
Product-3005


====
Install Kafka & zookeeper
sudo apt install openjdk-8-jdk
Download and extract kafka and zoo keeper

cp apache-zookeeper-3.7.0-bin/conf/zoo_sample.cfg apache-zookeeper-3.7.0-bin/conf/zoo.cfg
nano apache-zookeeper-3.7.0-bin/conf/zoo.cfg
cd apache-zookeeper-3.7.0-bin
./bin/zkServer.sh start


cd kafka_2.13-2.8.1
./bin/kafka-server-start.sh config/server.properties

==========================

Docker 


build
docker build -t my_docker_image_name . 
(. -buid context-current directory(where docker file is located), -t-tag name(display name))

run 

docker run -d -p 8080:80 --name my_custom_container_name docker_image
(8080-inner port, 80 outside world,-d -background)

stop
docker stop <container_id_or_name>


restart
docker restart <container_id_or_name>

process
docker ps -a

start a created container 
docker start <container_id_or_name>

inspect
docer inspect  <container_id_or_name>

==================================

Run containers

docker run -d -p 6379:6379 --name redis-server redis
start
docker start redis-server

========================================







